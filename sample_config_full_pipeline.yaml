---
#BANDAGE_PATH: 'Bandage'
##This is an empty string unless prokka is run through docker
#PROKKA_COMMAND_PREFIX: ''

##the main dir to retrieve required files
#main_dir: 'test/'
##main_dir: '/media/Data/PostDoc/Dalhousie/Work/Test2/Experiments/metacherchant/2_2_2/'

##Whether to use multi processors for parallel programming
#multi_processor: true
##the number of cores used in case of parallel programming
#core_num: 4
##coverage threshold to check if an annotated gene is truly AMR neighbor or just a false positive
##-1 when no gene-coverage threshold is used
#coverage_thr: 30
## which task would you like to do? For the entire
## pipeline choose 0; otherwise provide a number
## representing one of the following tasks:
## sequence_neighborhood = 1
## neighborhood_annotation = 2
#task: 0
## Whether to assume the AMR genes (in metagenome) are known or to look for them in the assembly graph
#find_amr_genes: true
## the path of the fasta file containing all AMR sequences;
##If empty the one installed with Sarand (from CARD DB) will be used
#amr_db: ''
## the threshold used for amr alignment: a hit is returned if identity/coverage >= threshold
#amr_identity_threshold:  95
##Setting for the assembler
## the address of the file for assembly graph
##Provide either the absolute path or the path from main_dir
gfa_file: 'spade_output/assembly_graph_with_scaffolds.gfa'
## The maximum K-mer size used by the assembler
#max_kmer_size: 55
## the length of AMR gene's neighbourhood to be extracted
#seq_length: 1000

## to be used in sequence extraction and after having path_node_threshold number of
##nodes in our path or already extracting path_seq_len_percent_threshold percent of
##neighborhood sequence, we stop or only traverse the path from the longest neighbor of the current node
#path_node_threshold: 1000
## Whether to contribute RGI annotation in Prokka result
#use_RGI: true
## Whether to include loose cases in RGI result
#RGI_include_loose: false
